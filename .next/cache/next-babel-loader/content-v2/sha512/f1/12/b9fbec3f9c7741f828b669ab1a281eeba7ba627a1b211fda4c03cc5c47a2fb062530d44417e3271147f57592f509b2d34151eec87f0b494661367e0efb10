{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar API_URL = process.env.WORKER_SIGNUP;\nvar method = 'POST';\nvar headers = {\n  'Content-Type': 'application/json'\n};\nexport var workerSignUp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(workerData) {\n    var requestOptions;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestOptions = {\n              method: method,\n              headers: headers,\n              body: JSON.stringify(workerData)\n            };\n            return _context.abrupt(\"return\", fetch(\"\".concat(process.env.NEXT_PUBLIC_WORKER_SIGNUP, \"/signup\"), requestOptions).then(function (response) {\n              return response.json();\n            }).then(function (json) {\n              // data.json = json;\n              return json;\n            })[\"catch\"](function (error) {\n              // data.error = error;\n              return error;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function workerSignUp(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/scordero/Projects/lolo-landing-page/services/index.js"],"names":["API_URL","process","env","WORKER_SIGNUP","method","headers","workerSignUp","workerData","requestOptions","body","JSON","stringify","fetch","NEXT_PUBLIC_WORKER_SIGNUP","then","response","json","error"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;AACA,IAAMC,MAAM,GAAG,MAAf;AACA,IAAMC,OAAO,GAAG;AAAE,kBAAgB;AAAlB,CAAhB;AAEA,OAAO,IAAMC,YAAY;AAAA,sEAAG,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,cADoB,GACH;AACrBJ,cAAAA,MAAM,EAANA,MADqB;AAErBC,cAAAA,OAAO,EAAPA,OAFqB;AAGrBI,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf;AAHe,aADG;AAAA,6CAOnBK,KAAK,WAAIX,OAAO,CAACC,GAAR,CAAYW,yBAAhB,cAAoDL,cAApD,CAAL,CACJM,IADI,CACC,UAAAC,QAAQ,EAAI;AAChB,qBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,aAHI,EAIJF,IAJI,CAIC,UAAAE,IAAI,EAAI;AACZ;AACA,qBAAOA,IAAP;AACD,aAPI,WAQE,UAAAC,KAAK,EAAI;AACd;AACA,qBAAOA,KAAP;AACD,aAXI,CAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZX,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["const API_URL = process.env.WORKER_SIGNUP;\nconst method = 'POST'\nconst headers = { 'Content-Type': 'application/json' };\n\nexport const workerSignUp = async (workerData) => {\n  const requestOptions = {\n    method,\n    headers,\n    body: JSON.stringify(workerData),\n  };\n\n  return fetch(`${process.env.NEXT_PUBLIC_WORKER_SIGNUP}/signup`, requestOptions)\n    .then(response => {\n      return response.json();\n    })\n    .then(json => {\n      // data.json = json;\n      return json;\n    })\n    .catch(error => {\n      // data.error = error;\n      return error;\n    });\n};"]},"metadata":{},"sourceType":"module"}