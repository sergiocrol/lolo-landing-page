{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/scordero/Projects/lolo-landing-page/components/Forms/Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst Form = ({\n  defaultValues,\n  children,\n  onSubmit,\n  onDisabled,\n  setClick,\n  setVal,\n  back\n}) => {\n  const methods = useForm({\n    mode: 'onChange'\n  });\n  const {\n    handleSubmit,\n    errors,\n    formState: {\n      isValid,\n      isDirty,\n      dirtyFields\n    },\n    formState,\n    getValues,\n    setValue\n  } = methods;\n  useEffect(() => {\n    // console.log(dirtyFields)\n    onDisabled(!isValid);\n  });\n  useEffect(() => {\n    setClick(getValues);\n  }, [onDisabled]);\n  useEffect(() => {\n    setVal(setValue);\n  }, [back === true]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: Array.isArray(children) ? children.map((child, index) => {\n      return child.props.name ? child.props.name === 'container' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: child.props.className,\n        children: child.props.children.map((childElement, idx) => {\n          return childElement.type !== 'div' ? /*#__PURE__*/React.createElement(childElement.type, _objectSpread({}, _objectSpread(_objectSpread({}, childElement.props), {}, {\n            register: methods.register,\n            key: childElement.props.name,\n            errors\n          }))) : childElement;\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/React.createElement(child.type, _objectSpread({}, _objectSpread(_objectSpread({}, child.props), {}, {\n        register: methods.register,\n        key: child.props.name,\n        errors\n      }))) : child;\n    }) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/scordero/Projects/lolo-landing-page/components/Forms/Form.js"],"names":["React","useEffect","useForm","Form","defaultValues","children","onSubmit","onDisabled","setClick","setVal","back","methods","mode","handleSubmit","errors","formState","isValid","isDirty","dirtyFields","getValues","setValue","Array","isArray","map","child","index","props","name","className","childElement","idx","type","createElement","register","key"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA,UAArC;AAAiDC,EAAAA,QAAjD;AAA2DC,EAAAA,MAA3D;AAAmEC,EAAAA;AAAnE,CAAD,KAA+E;AAC1F,QAAMC,OAAO,GAAGT,OAAO,CAAC;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAvB;AACA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,SAAS,EAAE;AAACC,MAAAA,OAAD;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,KAAnC;AAAoEH,IAAAA,SAApE;AAA+EI,IAAAA,SAA/E;AAA0FC,IAAAA;AAA1F,MAAuGT,OAA7G;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,UAAU,CAAC,CAACS,OAAF,CAAV;AACD,GAHQ,CAAT;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,QAAQ,CAACW,SAAD,CAAR;AACD,GAFQ,EAEN,CAACZ,UAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACW,QAAD,CAAN;AACD,GAFQ,EAEN,CAACV,IAAI,KAAK,IAAV,CAFM,CAAT;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEG,YAAY,CAACP,QAAD,CAA5B;AAAA,cACGe,KAAK,CAACC,OAAN,CAAcjB,QAAd,IACGA,QAAQ,CAACkB,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7B,aAAOD,KAAK,CAACE,KAAN,CAAYC,IAAZ,GACHH,KAAK,CAACE,KAAN,CAAYC,IAAZ,KAAqB,WAArB,gBACE;AAAiB,QAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAYE,SAAxC;AAAA,kBACCJ,KAAK,CAACE,KAAN,CAAYrB,QAAZ,CAAqBkB,GAArB,CAAyB,CAACM,YAAD,EAAeC,GAAf,KAAuB;AAC/C,iBAAOD,YAAY,CAACE,IAAb,KAAsB,KAAtB,gBACL/B,KAAK,CAACgC,aAAN,CAAoBH,YAAY,CAACE,IAAjC,oDAEKF,YAAY,CAACH,KAFlB;AAGEO,YAAAA,QAAQ,EAAEtB,OAAO,CAACsB,QAHpB;AAIEC,YAAAA,GAAG,EAAEL,YAAY,CAACH,KAAb,CAAmBC,IAJ1B;AAKEb,YAAAA;AALF,cADK,GASLe,YATF;AAUD,SAXA;AADD,SAAUJ,KAAV;AAAA;AAAA;AAAA;AAAA,cADF,gBAeEzB,KAAK,CAACgC,aAAN,CAAoBR,KAAK,CAACO,IAA1B,oDAEKP,KAAK,CAACE,KAFX;AAGEO,QAAAA,QAAQ,EAAEtB,OAAO,CAACsB,QAHpB;AAIEC,QAAAA,GAAG,EAAEV,KAAK,CAACE,KAAN,CAAYC,IAJnB;AAKEb,QAAAA;AALF,UAhBC,GAwBHU,KAxBJ;AAyBD,KA1BD,CADH,GA4BGnB;AA7BN;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAlDD;;AAoDA,eAAeF,IAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { useForm } from 'react-hook-form';\n\nconst Form = ({ defaultValues, children, onSubmit, onDisabled, setClick, setVal, back }) => {\n  const methods = useForm({ mode: 'onChange' });\n  const { handleSubmit, errors, formState: {isValid, isDirty, dirtyFields}, formState, getValues, setValue } = methods;\n\n  useEffect(() => {\n    // console.log(dirtyFields)\n    onDisabled(!isValid);\n  });\n\n  useEffect(() => {\n    setClick(getValues);\n  }, [onDisabled]);\n\n  useEffect(() => {\n    setVal(setValue);\n  }, [back === true])\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {Array.isArray(children)\n        ? children.map((child, index) => {\n            return child.props.name\n              ? child.props.name === 'container'\n                ? <div key={index} className={child.props.className}>\n                  {child.props.children.map((childElement, idx) => {\n                    return childElement.type !== 'div'\n                    ? React.createElement(childElement.type, {\n                      ...{\n                        ...childElement.props,\n                        register: methods.register,\n                        key: childElement.props.name,\n                        errors\n                      }\n                    })\n                    : childElement\n                  })}\n                  </div>\n                : React.createElement(child.type, {\n                  ...{\n                    ...child.props,\n                    register: methods.register,\n                    key: child.props.name,\n                    errors\n                  }\n                })\n              : child;\n          })\n        : children}\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}