{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRef, useState, useEffect } from 'react';\nimport { useViewportScroll, useTransform, useSpring, motion } from 'framer-motion';\n\nconst rand = (min = 0, max = 100) => {\n  return Math.floor(Math.random() * (+max - +min) + +min);\n};\n\nconst ParallaxItem = ({\n  children,\n  className\n}) => {\n  const {\n    scrollYProgress\n  } = useViewportScroll();\n  const ref = useRef();\n  const {\n    0: start,\n    1: setStart\n  } = useState(null);\n  const {\n    0: end,\n    1: setEnd\n  } = useState(null);\n  const {\n    0: randomRange,\n    1: setRandomRange\n  } = useState(0);\n  const springConfig = {\n    damping: 80,\n    stiffness: 80,\n    mass: rand(1, 1.5)\n  };\n  useEffect(() => {\n    if (!ref.current) return null;\n\n    const onResize = () => {\n      const rect = ref.current.getBoundingClientRect();\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      const offsetTop = rect.top + scrollTop;\n      setStart(offsetTop / document.body.clientHeight);\n      setEnd((offsetTop + rect.height) / document.body.clientHeight / 2);\n      setRandomRange(rand(0, -80));\n    };\n\n    onResize();\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, [ref]);\n  const y = useSpring(useTransform(scrollYProgress, [start, end], [0, randomRange]), springConfig);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsx(motion.div, {\n      ref: ref,\n      initial: {\n        y: 0\n      },\n      style: {\n        y\n      },\n      children: children\n    })\n  });\n};\n\nexport default ParallaxItem;","map":null,"metadata":{},"sourceType":"module"}